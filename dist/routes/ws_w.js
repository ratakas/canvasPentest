"use strict";

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = function (app) {
  var reqPath = _path.default.join(__dirname, '../');

  var workspace = app.db.models.Worksapce;
  var Works = app.db.models.Work;
  app.route('/workspace_works').get(function (req, res) {
    workspace.findAll({
      attributes: ['id', 'name', 'type', 'created_at'],
      include: [{
        model: Works,
        where: {
          worksapce_id: app.db.Sequelize.col('Worksapce.id')
        },
        attributes: ['id', 'name', 'host', 'state']
      }]
    }).then(function (result) {
      res.json(result);
    });
  });
  app.route('/space_works/:id').get(function (req, res) {
    console.log(req.params);
    Works.findAll({
      where: {
        worksapce_id: req.params.id
      },
      attributes: ['id', ['name', 'text']]
    }).then(function (result) {
      res.json(result);
    });
  });
  /*work use*/

  app.route('/workspace_works/:id/:idw').get(function (req, res) {
    console.log(req.params);
    workspace.findOne({
      where: {
        id: req.params.id
      },
      attributes: ['id', 'name', 'type', 'created_at'],
      include: [{
        model: Works,
        where: {
          worksapce_id: app.db.Sequelize.col('Worksapce.id'),
          id: req.params.idw
        },
        attributes: ['id', 'name', 'host', 'inforelevant', 'inforeview', 'infoall', 'state', 'created_at']
      }]
    }).then(function (result) {
      res.json(result);
    });
  });
  /**report html */

  app.get('/report/:id', function (req, res) {
    Works.findOne({
      where: req.params
    }).then(function (result) {
      if (result) {
        var report = require('../view/report.js');

        var htmlbuild = report.generatedhtml(result);
        res.send(htmlbuild);
      } else {
        res.sendStatus(404);
      }
    }).catch(function (error) {
      res.status(412).json({
        msg: error.message
      });
    });
  });
  /**report htmls ws */

  app.get('/reporthtmlall/:id', function (req, res) {
    Works.findAll({
      where: {
        worksapce_id: req.params.id
      }
    }).then(function (result) {
      if (result) {
        var report = require('../view/report.js');

        var contenbody = "";
        result.forEach(function (work, index, arr) {
          contenbody += report.generatedhtmlall(work);
        });
        var htmlbuild = report.generatedmodelohtml(contenbody);
        res.send(htmlbuild);
      } else {
        res.sendStatus(404);
      }
    }).catch(function (error) {
      res.status(412).json({
        msg: error.message
      });
    });
  });
  /**report pdf */

  app.get('/reportpdf/:id', function (req, res) {
    Works.findOne({
      where: req.params
    }).then(function (result) {
      if (result) {
        var report = require('../view/report.js');

        var htmlbuild = report.generatedpdf(result);

        var pdf = require('html-pdf');

        var options = {
          "border": {
            "top": "1cm",
            "right": "1cm",
            "bottom": "2cm",
            "left": "1cm"
          },
          "format": "Letter"
        };
        pdf.create(htmlbuild, options).toFile(_path.default.join(reqPath + 'public/reports/reporte.pdf'), function (err, res2) {
          if (err) {
            console.log(err);
            res.status(404);
          } else {
            console.log(res2);
            res.redirect("/reports/reporte.pdf");
          }
        });
      } else {
        res.sendStatus(404);
      }
    }).catch(function (error) {
      res.status(412).json({
        msg: error.message
      });
    });
  });
};