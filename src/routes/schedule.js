
module.exports = (app) => {
  
    const model = app.db.models.Schedule;

    
  
    app.route('/api/schedule')
      .get((req, res) => {
        app.io.emit('message', 'test');
        model.findAll({})
          .then(result => res.json({data:result}))
          .catch(error => {
            res.status(412).json({msg: error.message});
          });
      }).post((req, res) => {
        model.create(req.body)
          .then(result => res.json(result))
          .catch(error => {
            res.status(412).json({msg: error.message});
          });
      });
      
    app.route('/api/schedule/:id')
        .get((req, res) => {
        model.findOne({where: req.params})
            .then(result => {
            if (result) {
                res.json(result);
            } else {
                res.sendStatus(404);
            }
            })
            .catch(error => {
            res.status(412).json({msg: error.message});
            });
        })
        .put((req, res) => {
            model.update(req.body, {where: req.params})
              .then(result => {
                model.findOne({where: req.params})
                  .then(result => {
                    if (result) {
                      res.json(result);
                    } else {
                      res.status(412).json({msg: error.message});
                    }
                  }).catch(error => {
                    res.status(412).json({msg: error.message});
                  });
              })
              .catch(error => {
                res.status(412).json({msg: error.message});
              });
          })
        .delete((req, res) => {
        model.destroy({where: req.params})
            .then(result => res.sendStatus(204))
            .catch(error => {
            res.status(204).json({msg: error.message});
            });
        });
    ///itemsc
    const itemsc = app.db.models.Itemsc;
    
    

    app.route('/api/item')
      .get((req, res) => {
        itemsc.findAll({})
          .then(result => res.json(result))
          .catch(error => {
            res.status(412).json({msg: error.message});
          });
      }).post((req, res) => {
        itemsc.create(req.body)
          .then(result => res.json(result))
          .catch(error => {
            res.status(412).json({msg: error.message});
          });
      })
      app.route('/api/item/:id')
      .put((req, res) => {
        itemsc.update(req.body, {where: req.params})
          .then(result => {
            itemsc.findOne({where: req.params})
              .then(result => {
                if (result) {
                  res.json(result);
                } else {
                  res.status(412).json({msg: error.message});
                }
              }).catch(error => {
                res.status(412).json({msg: error.message});
              });
          })
          .catch(error => {
            res.status(412).json({msg: error.message});
          });
      })
    .delete((req, res) => {
      itemsc.destroy({where: req.params})
        .then(result => res.sendStatus(204))
        .catch(error => {
        res.status(204).json({msg: error.message});
        });
    });

    app.route('/api/itemsc/:schedule_id')
      .get((req, res) => {
        itemsc.findAll({where: req.params})
            .then(result => {
            if (result) {
                res.json(result);
            } else {
                res.sendStatus(404);
            }
            })
            .catch(error => {
            res.status(412).json({msg: error.message});
            });
        })

    }     